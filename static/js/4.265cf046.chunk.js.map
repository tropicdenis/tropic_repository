{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/AddMessageForm/AddMessageForm.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","console","log","to","DialogItem","path","id","className","s","dialog","active","name","dialogItemImage","src","alt","Message","messageItem","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElemets","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessageActionCreator","newMessageBody","compose"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,gBAAkB,iCAAiC,YAAc,+B,oHCQxQC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIpB,SAASE,EAAqBC,GASjC,OADiCC,YAASN,EAATM,EANP,SAACC,GAAyC,IAC3DL,EAAwBK,EAAxBL,OAAWM,EAD+C,YAClCD,EADkC,YAG/D,OADRE,QAAQC,IAAIR,GACCA,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,CAAUG,GAAI,gB,6FCI3BC,EAfI,SAACL,GAChB,IAAIM,EAAO,YAAcN,EAAMO,GAC/B,OACI,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACI,cAAC,IAAD,CAASP,GAAIE,EAAb,SAAoBN,EAAMY,OAC1B,qBAAKJ,UAAWC,IAAEI,gBACdC,IAAK,6DACLC,IAAK,oBCCNC,EATC,SAAChB,GACb,OACI,qBAAKQ,UAAWC,IAAEQ,YAAlB,SAAgCjB,EAAMkB,W,iCCLxCC,EAAeC,YAAiB,KAiBzBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfZ,SAACtB,GACpB,OACI,uBAAMwB,SAAUxB,EAAMyB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUhB,KAAK,iBAC1BiB,SAAU,CAACC,IAAUX,GACrBY,YAAY,yBAEvB,8BACI,0DC8BDC,EA9BC,SAAChC,GAEb,IAAIN,EAAQM,EAAMiC,YAEdC,EAAiBxC,EAAMyC,QACtBC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYzB,KAAMyB,EAAEzB,KAAiBL,GAAI8B,EAAE9B,IAAZ8B,EAAE9B,OAC3C+B,EAAmB5C,EAAM6C,SACxBH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAAoBX,GAAIiC,EAAEjC,IAAZiC,EAAEjC,OAMlD,OACQ,sBAAKC,UAAWC,IAAE0B,QAAlB,UACI,qBAAK3B,UAAWC,IAAEgC,aAAlB,SACKP,IAGL,qBAAK1B,UAAWC,IAAE8B,SAAlB,SACI,8BAAMD,MAGV,cAACjB,EAAD,CAAqBG,SAdb,SAACkB,GACjB1C,EAAM2C,yBAAyBD,EAAOE,uB,wBCR/BC,sBACX9C,aAPkB,SAACL,GACnB,MAAO,CACHuC,YAAavC,EAAMuC,eAKE,CAACU,+BAC1B9C,IAFWgD,CAGbb","file":"static/js/4.265cf046.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3rH8m\",\"dialogsItems\":\"Dialogs_dialogsItems__1JS-6\",\"active\":\"Dialogs_active__5tbuV\",\"messages\":\"Dialogs_messages__1yn6q\",\"message\":\"Dialogs_message__kDM1F\",\"dialogItemImage\":\"Dialogs_dialogItemImage__3DEu2\",\"messageItem\":\"Dialogs_messageItem__2Z3Ho\"};","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../Redux/redux_store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsForRedirectType = {\r\n    isAuth: boolean\r\n};\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType): MapStatePropsForRedirectType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStatePropsForRedirectType) => {\r\n        let {isAuth, ...restProps} = props\r\nconsole.log(isAuth)\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    const ConnectRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectRedirectComponent\r\n}\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"../Dialogs.module.css\"\r\n\r\ntype DialogItemType = {\r\n    name: string,\r\n    id: number\r\n}\r\n\r\nconst DialogItem = (props: DialogItemType) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n            <img className={s.dialogItemImage}\r\n                src={\"https://m.buro247.ru/images/senina/SpongeBob_stock_art.jpg\"}\r\n                alt={\"Spounge Bob\"}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem\r\n\r\n","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\"\r\n\r\ntype MessageType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nconst Message = (props: MessageType) => {\r\n    return (\r\n        <div className={s.messageItem}>{props.message}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\n","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props:any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\"\r\n                       validate={[required, maxLength100]}\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React, {ChangeEvent} from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport {InitialDialogsType, sendMessageActionCreator} from \"../../Redux/DialogsReducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: InitialDialogsType\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessageActionCreator: (newMessageBody: string) => void\r\n    isAuth: boolean\r\n}\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElemets = state.dialogs\r\n        .map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let messagesElements = state.messages\r\n        .map(m => <Message message={m.message} key={m.id} id={m.id}/>)\r\n    let newMessageBody = state\r\n    let addNewMessage = (values: any) => {\r\n        props.sendMessageActionCreator(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElemets}\r\n                </div>\r\n\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs\r\n\r\n","import React from \"react\";\r\nimport {InitialDialogsType, sendMessageActionCreator} from \"../../Redux/DialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux_store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsPage: InitialDialogsType\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType ): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {sendMessageActionCreator}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}